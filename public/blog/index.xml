<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Fernando Carazo</title>
    <link>/blog/</link>
    <description>Recent content in Blogs on Fernando Carazo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 May 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Challenge2021 - Amazon</title>
      <link>/blog/2021/05/03/challenge2021-amazon/</link>
      <pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/2021/05/03/challenge2021-amazon/</guid>
      <description>Contact info: Fernando Carazo fcarazo@tecnun.es
1 Department of Biomedical Engineering and Sciences, Tecnun. University of Navarre
2 Institute Of Data Science and Artificial Intelligence, University of Navarre

Introduction. Vehicle Routing ProblemThis year’s Challenge in the subject Arquitectura de Computadores II will be related to the delivery process of Amazon.
In the Vehicle Routing Problem (VRP), the goal is to find optimal routes for multiple vehicles visiting a set of locations.</description>
    </item>
    
    <item>
      <title>How to plot PRO graphs with R iGraph and VisNetworks</title>
      <link>/blog/2021/05/03/01.02b_visnetwork_examples/</link>
      <pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/2021/05/03/01.02b_visnetwork_examples/</guid>
      <description>Contact info: Fernando Carazo fcarazo@tecnun.es
1 Department of Biomedical Engineering and Sciences, Tecnun. University of Navarre
2 Institute Of Data Science and Artificial Intelligence, University of Navarre
### vizNetwork##vn1library(igraph)## ## Attaching package: &amp;#39;igraph&amp;#39;## The following objects are masked from &amp;#39;package:stats&amp;#39;:## ## decompose, spectrum## The following object is masked from &amp;#39;package:base&amp;#39;:## ## unionrequire(visNetwork, quietly = TRUE)# minimal examplenodes &amp;lt;- data.</description>
    </item>
    
    <item>
      <title>Crea tu web personal en 5 minutos</title>
      <link>/blog/2021/02/09/2021-02-09-crea-tu-web-personal-en-5-minutos.es/</link>
      <pubDate>Tue, 09 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/2021/02/09/2021-02-09-crea-tu-web-personal-en-5-minutos.es/</guid>
      <description>Tu primera página personal!Bienvenido al tutorial que necesitas para crear tu página personal.
Si te dedicas al marketing, programación, ciencia de datos, eres diseñador gráfico o miles de profesiones más, tener tu sitio personal te abrirá muchas puertas en tu carrera profesional.
Después de dar muchas vueltas y probar distintas opciones para crear tu página personal, te comparto mis experiencias.
Comenzamos!
Empieza desde cero!library(blogdown)library(rmarkdown)x &amp;lt;- data(&amp;quot;AirPassengers&amp;quot;)kableExtra::kable(x)xAirPassengersVoilà!</description>
    </item>
    
    <item>
      <title>post_2</title>
      <link>/blog/2021/02/09/2021-02-09-post-2/</link>
      <pubDate>Tue, 09 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/2021/02/09/2021-02-09-post-2/</guid>
      <description>image for dani
</description>
    </item>
    
    <item>
      <title>Linked post</title>
      <link>/blog/2015/10/02/linked-post/</link>
      <pubDate>Fri, 02 Oct 2015 21:49:20 +0200</pubDate>
      
      <guid>/blog/2015/10/02/linked-post/</guid>
      <description>I&amp;rsquo;m a linked post in the menu. You can add other posts by adding the following line to the frontmatter:
menu = &amp;quot;main&amp;quot;  Lorem ipsum dolor sit amet, consectetur adipiscing elit. In mauris nulla, vestibulum vel auctor sed, posuere eu lorem. Aliquam consequat augue ut accumsan mollis. Suspendisse malesuada sodales tincidunt. Vivamus sed erat ac augue bibendum porta sed id ipsum. Ut mollis mauris eget ligula sagittis cursus. Aliquam id pharetra tellus.</description>
    </item>
    
    <item>
      <title>Go is for lovers</title>
      <link>/blog/2015/09/17/go-is-for-lovers/</link>
      <pubDate>Thu, 17 Sep 2015 13:47:08 +0200</pubDate>
      
      <guid>/blog/2015/09/17/go-is-for-lovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Hugo is for lovers</title>
      <link>/blog/2015/08/03/hugo-is-for-lovers/</link>
      <pubDate>Mon, 03 Aug 2015 13:39:46 +0200</pubDate>
      
      <guid>/blog/2015/08/03/hugo-is-for-lovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/blog/2015/07/23/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/blog/2015/07/23/2015-07-23-r-rmarkdown/</guid>
      <description>R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars)## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
    <item>
      <title>Creating a new theme</title>
      <link>/blog/2015/06/24/creating-a-new-theme/</link>
      <pubDate>Wed, 24 Jun 2015 13:50:46 +0200</pubDate>
      
      <guid>/blog/2015/06/24/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Migrate from Jekyll</title>
      <link>/blog/1/01/01/migrate-from-jekyll/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/1/01/01/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
  </channel>
</rss>